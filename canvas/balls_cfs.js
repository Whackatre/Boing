// Generated by CoffeeScript 1.6.1
(function() {
  'Boing! - Coffeescript Version\nby Justin Z';
  var Ball, amtOfBalls, animate, ballSize, balls, c, colorDepthMax, colorDepthMin, ctx, defaultSpeed, gravity, initBalls, randColor, randFloat, randInt, trans, update;

  amtOfBalls = 24;

  ballSize = 32;

  gravity = 0.166;

  defaultSpeed = 6;

  colorDepthMin = 105;

  colorDepthMax = 245;

  trans = 0.9;

  c = document.getElementById('ballCanvas');

  ctx = c.getContext('2d');

  Ball = (function() {

    function Ball(color, radius) {
      this.color = color;
      this.radius = radius;
      this.x = c.width / 2;
      this.y = c.height / 2;
      this.vx = 0;
      this.vy = 0;
    }

    return Ball;

  })();

  initBalls = function(balls) {
    var b, i, _i, _results;
    _results = [];
    for (i = _i = 0; 0 <= amtOfBalls ? _i <= amtOfBalls : _i >= amtOfBalls; i = 0 <= amtOfBalls ? ++_i : --_i) {
      b = new Ball(randColor(trans, ballSize));
      b.vx = randFloat(-1 * defaultSpeed, defaultSpeed);
      b.vy = randFloat(-1 * defaultSpeed, defaultSpeed);
      _results.push(balls[i] = b);
    }
    return _results;
  };

  randInt = function(min, max) {
    return Math.floor(Math.random() * (max - min + 1) + min);
  };

  randFloat = function(min, max) {
    return Math.random() * (max - min + 1) + min;
  };

  randColor = function(trans) {
    var blue, green, red;
    red = randInt(colorDepthMin, colorDepthMax);
    green = randInt(colorDepthMin, colorDepthMax);
    blue = randInt(colorDepthMin, colorDepthMax);
    return "rgba(" + red + ", " + green + ", " + blue + ", " + trans + ")";
  };

  balls = new Array();

  'window.requestAnimFrame = (function(callback) {\nreturn window.requestAnimationFrame || window.webkitRequestAnimationFrame || window.mozRequestAnimationFrame || window.oRequestAnimationFrame || window.msRequestAnimationFrame;\n})();';

  window.requestAnimFrame = (function(callback) {
    return window.requestAnimationFrame || window.webkitRequestAnimationFrame || window.mozRequestAnimationFrame || window.oRequestAnimationFrame || window.msRequestAnimationFrame;
  })();

  initBalls(balls);

  update = function() {
    var b, i, _i, _len, _results;
    _results = [];
    for (i = _i = 0, _len = balls.length; _i < _len; i = ++_i) {
      b = balls[i];
      b.x += b.vx;
      b.y += b.vy;
      if (b.x < 0 + ballSize) {
        b.x = 0 + ballSize;
        b.vx *= -1;
      }
      if (b.y < 0) {
        b.y = 0;
        b.vy *= -1;
      }
      if (b.x > c.width - ballSize) {
        b.x = c.width - ballSize;
        b.vx *= -1;
      }
      if (b.y > c.height - ballSize) {
        b.y = c.height - ballSize;
        b.vy *= -1;
      }
      if (Math.abs(b.vy) > 0) {
        _results.push(b.vy += gravity);
      } else {
        _results.push(void 0);
      }
    }
    return _results;
  };

  animate = function() {
    var b, i, _i, _len;
    update();
    ctx.clearRect(0, 0, c.width, c.height);
    ctx.strokeStyle = 'black';
    ctx.strokeRect(0, 0, c.width, c.height);
    ctx.fillStyle = 'rgb(0, 0, 50)';
    ctx.fillRect(0, 0, c.width, c.height);
    for (i = _i = 0, _len = balls.length; _i < _len; i = ++_i) {
      b = balls[i];
      ctx.fillStyle = b.color;
      ctx.beginPath();
      ctx.arc(b.x, b.y, ballSize, 0, Math.PI * 2);
      ctx.fill();
    }
    ctx.fillStyle = 'yellow';
    ctx.font = '24px Helvetica';
    ctx.fillText('Boing! - Coffee', 10, 30);
    ctx.fillText('by Whackatre', 10, 70);
    return requestAnimFrame(function() {
      return animate();
    });
  };

  animate();

}).call(this);
